// very similar to others...

rule DeleteGraph {
    when {
        rr : RequestRouter  rr.path.substring(0, 8) == "/graphs/";
        rr : RequestRouter  rr.method == "delete";
        r : Route r.route["targetFunction"] == "";
    } then {
        log.debug("*** DeleteGraph rule triggered ***"); 
        modify(r, function(){this.route["type"] = "delete";});
        modify(r, function(){this.route["graph"] = config.uriBase + rr.path;});
        modify(r, function(){this.route["path"] = rr.path;});
        modify(r, function(){this.route["queryOptions"]["method"] = "POST";});
        modify(r, function(){this.route["targetFunction"] = "GenericHandler";});
        modify(r, function(){this.route["queryTemplate"] = "dropGraphTemplate";}); // DROP GRAPH <graph>
        modify(r, function(){this.route["responseHandler"] = "TemplatingResponseHandler";});
        modify(r, function(){this.route["responseHeaders"] = {"Location" : "/"};});
        modify(r, function(){this.route["responseCode"] = "204";});
    }
}


rule CreateGraphTurtle {
    when {
        rr : RequestRouter  rr.path.substring(0, 8) == "/graphs/";
        rr : RequestRouter  rr.method == "post";
        rr : RequestRouter  rr.contentType == "text/turtle";
        r : Route r.route["targetFunction"] == "";
    } then {
        log.debug("*** CreateGraphTurtle rule triggered ***"); 
        modify(r, function(){this.route["type"] = "create";});
        modify(r, function(){this.route["graph"] = config.uriBase + rr.path;});
        modify(r, function(){this.route["path"] = rr.path;});
        modify(r, function(){this.route["queryOptions"]["headers"]["content-type"] = "application/sparql-update";});
        modify(r, function(){this.route["targetFunction"] = "GenericHandler";});
        modify(r, function(){this.route["responseHandler"] = "TemplatingResponseHandler";});
        modify(r, function(){this.route["queryTemplate"] = "turtleCreateTemplate";}); 
        modify(r, function(){this.route["responseHeaders"] = {"Location" : "/"};}); 
        modify(r, function(){this.route["responseCode"] = "201";});
    }
}

rule ReadGraphTurtle {
    when {
        rr : RequestRouter  rr.path.substring(0, 8) == "/graphs/";
        rr : RequestRouter  rr.method.toLowerCase()  == "get";
        rr : RequestRouter  rr.accept == "text/turtle";
        r : Route r.route["targetFunction"] == "";
    } then {
        log.debug("*** ReadGraphTurtle rule triggered ***"); 
        modify(r, function(){this.route["type"] = "read";});
        modify(r, function(){this.route["graph"] =  config.uriBase + rr.path;});
        modify(r, function(){this.route["path"] = rr.path;});
        
        modify(r, function(){this.route["queryOptions"]["method"] = "GET";});
        
        modify(r, function(){this.route["queryOptions"]["path"] = config.client["queryEndpoint"];});
        modify(r, function(){this.route["targetFunction"] = "GenericHandler";});
        modify(r, function(){this.route["queryTemplate"] = "readGraphTemplate";}); // needs graph & uri
        modify(r, function(){this.route["viewTemplate"] = "minimalViewTemplate";}); // needs graph & uri
        modify(r, function(){this.route["responseHandler"] = "TemplatingResponseHandler";});
        
        modify(r, function(){this.route["responseCode"] = "200";});
    }
}

rule UpdateGraphTurtle {
    when {
        rr : RequestRouter  rr.path.substring(0, 8) == "/graphs/";
        rr : RequestRouter  rr.method.toLowerCase() == "put";
        rr : RequestRouter  rr.contentType == "text/turtle";
        r : Route r.route["targetFunction"] == "";
    } then {
        log.debug("*** UpdateGraphTurtle rule triggered ***"); 
        modify(r, function(){this.route["type"] = "update";});
        modify(r, function(){this.route["graph"] = config.uriBase + rr.path;});
        modify(r, function(){this.route["path"] = rr.path;});
        modify(r, function(){this.route["queryOptions"]["method"] = "POST";});
        modify(r, function(){this.route["queryOptions"]["headers"]["content-type"] = "application/sparql-update";});
        modify(r, function(){this.route["targetFunction"] = "GenericHandler";});
        modify(r, function(){this.route["responseHandler"] = "TemplatingResponseHandler";});
        modify(r, function(){this.route["queryTemplate"] = "updateGraphTemplate";}); 
        modify(r, function(){this.route["responseHeaders"] = {"Location" : "/"};}); 
        modify(r, function(){this.route["responseCode"] = "201";});
    }
}